---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Fontes">
  <main>
    <div class="font-div headline" id="title-content">
      <span>Espaço AZ <br /> Saúde é beleza!</span>
    </div>

    <div>
      <p>Tamanhos:</p>
      <button class="btn-size headline active">Headline</button>
      <button class="btn-size display">Display</button>
    </div>

    <div>
      <p>Fontes:</p>
      <button class="btn-fonts roboto active">Roboto</button>
      <button class="btn-fonts nunito">Nunito Sans Variable</button>
      <button class="btn-fonts calistoga">Calistoga</button>
      <button class="btn-fonts caprasimo">Caprasimo</button>
      <button class="btn-fonts staatliches">Staatliches</button>
      <button class="btn-fonts poetsen-one">Poetsen one</button>
      <button class="btn-fonts konkhmer-sleokchhner">Konkhmer Sleokchher</button>
      <button class="btn-fonts kavoon">Kavoon</button>
      <button class="btn-fonts chicle">Chicle</button>
      <button class="btn-fonts changa-one">Changa One</button>
      <button class="btn-fonts bagel-fat-one">Bagel Fat One</button>
    </div>
  </main>
</Layout>

<style lang="scss">
  h1 {
    text-align: center;
    font-family: var(--font-display);
  }

  main {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    padding: 2rem 1rem;
    gap: 5rem;
  }

  .btn-fonts,
  .btn-size {
    all: unset;
    box-sizing: border-box;
    padding: 0.5rem 1rem;
    border: 1px solid var(--md-sys-color-outline);
    font-family: var(--font-display);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    border-radius: 28px;
    transition: all 0.2s ease-in-out;

    &:hover {
      box-shadow:
        0px 1px 3px 0px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14),
        0px 2px 1px -1px rgba(0, 0, 0, 0.12);

      background: var(--md-sys-color-tertiary-container);
      color: var(--md-sys-color-on-tertiary-container);
    }

    &.active {
      background: var(--md-sys-color-tertiary-container);
      color: var(--md-sys-color-on-tertiary-container);
    }
  }

  div:has(.btn-fonts, .btn-size) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
    max-width: 900px;

    p {
      width: 100%;
    }
  }

  .font-div {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    span {
      white-space: pre-wrap;
      text-align: center;
    }
  }
</style>

<style lang="scss" is:global>
  .roboto {
    --font-display: 'Roboto', system-ui;
  }

  .nunito {
    --font-display: 'Nunito Sans Variable', system-ui;
  }

  .calistoga {
    --font-display: 'Calistoga', system-ui;
  }

  .caprasimo {
    --font-display: 'Caprasimo', system-ui;
  }

  .staatliches {
    --font-display: 'Staatliches', system-ui;
  }

  .poetsen-one {
    --font-display: 'Poetsen One', system-ui;
  }

  .konkhmer-sleokchhner {
    --font-display: 'Konkhmer Sleokchher', system-ui;
  }

  .kavoon {
    --font-display: 'Kavoon', system-ui;
  }

  .chicle {
    --font-display: 'Chicle', system-ui;
  }

  .changa-one {
    --font-display: 'Changa One', system-ui;
  }

  .bagel-fat-one {
    --font-display: 'Bagel Fat One', system-ui;
  }

  #title-content {
    &.headline {
      @include headline;
    }

    &.display {
      @include display;
    }
  }
</style>

<script>
  const title = document.getElementById('title-content');
  window.addEventListener('DOMContentLoaded', () => {
    document.documentElement.classList.add('roboto');
  });

  const btns: NodeListOf<HTMLButtonElement> = document.querySelectorAll('.btn-fonts');

  btns.forEach(btn => {
    btn.addEventListener('click', () => {
      const font = btn.classList[1];
      document.documentElement.classList.remove(
        'roboto',
        'nunito',
        'calistoga',
        'caprasimo',
        'staatliches',
        'poetsen-one',
        'konkhmer-sleokchhner',
        'kavoon',
        'chicle',
        'changa-one',
        'bagel-fat-one',
      );
      document.documentElement.classList.add(font);

      btn.classList.add('active');
      btns.forEach(b => {
        if (b !== btn) {
          b.classList.remove('active');
        }
      });
    });
  });

  const btnSize: NodeListOf<HTMLButtonElement> = document.querySelectorAll('.btn-size');

  btnSize.forEach(btn => {
    btn.addEventListener('click', () => {
      const className = btn.classList[1];
      title?.classList.remove('headline', 'display');
      title?.classList.add(className);

      btnSize.forEach(b => {
        if (b !== btn) {
          b.classList.remove('active');
        }
      });

      btn.classList.add('active');
    });
  });
</script>
